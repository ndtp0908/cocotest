@{
    ViewData["Title"] = "Quản lý";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        <strong>Lỗi!</strong> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="mt-4">
    <div class="row">
        <div class="col-md-3 w-auto m-4">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <i class="fas fa-bars me-2"></i> Menu Quản Lý
                </div>
                <ul class="list-group list-group-flush">            
                    <li class="list-group-item">
                        <a href="#" class="nav-link d-flex align-items-center" onclick="showTab('billManager')">
                            <i class="fas fa-file-invoice-dollar me-2"></i>
                            <span>Quản lý hóa đơn</span>
                        </a>
                    </li>
                    <li class="list-group-item">
                        <a href="#" class="nav-link d-flex align-items-center" onclick="showTab('productManager')">
                            <i class="fas fa-box-open me-2"></i>
                            <span>Quản lý sản phẩm</span>
                        </a>
                    </li>
                    <li class="list-group-item">
                        <a href="#" class="nav-link d-flex align-items-center" onclick="showTab('userManager')">
                            <i class="fas fa-users me-2"></i>
                            <span>Quản lý tài khoản</span>
                        </a>
                    </li>
                    <li class="list-group-item">
                        <a href="#" class="nav-link d-flex align-items-center" onclick="showTab('changePassword')">
                            <i class="fas fa-key me-2"></i>
                            <span>Đổi mật khẩu</span>
                        </a>
                    </li>
                    <li class="list-group-item">
                        <a href="#" class="nav-link d-flex align-items-center" onclick="showTab('feedbackManager')">
                            <i class="fas fa-comments me-2"></i>
                            <span>Quản lý góp ý</span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col-md-9">
            <div id="toastContainer" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;"></div>
            <div id="billManager" class="tab-content">
                <h2>Quản lý hóa đơn</h2>
                <button class="btn btn-success mb-3" onclick="showBillForm()">Thêm hóa đơn</button>
                <button class="btn btn-success mb-3" onclick="exportExcel()">Xuất file Excel</button>
                <!-- Bảng hóa đơn -->
                <table class="table mt-2">
                    <thead>
                        <tr>
                            @* <th>Bill ID</th>
                            <th>User ID</th> *@
                            <th>Tên khách hàng</th>
                            <th>Số điện thoại</th>
                            <th>Giảm giá</th>
                            <th>Tổng tiền</th>
                            <th>Phương thức thanh toán</th>
                            <th>Địa chỉ</th>
                            <th>Trạng thái</th>
                            <th>Ngày tạo</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="billTableBody">
                        <tr><td colspan="6" class="text-center">Chưa có dữ liệu</td></tr>
                    </tbody>
                </table>
                <!-- Form thêm/sửa hóa đơn -->
                <div id="billFormContainer" class="d-none">
                    <h4 id="billFormTitle">Thêm hóa đơn</h4>
                    <form id="billForm">
                        <input type="hidden" id="billId">
                        <div class="mb-3">
                            <label for="userId">User ID:</label>
                            <input type="text" class="form-control" id="userId" required>
                        </div>
                        <div class="mb-3">
                            <label for="fullName">Tên khách hàng:</label>
                            <input type="text" class="form-control" id="fullName" required>
                        </div>
                        <div class="mb-3">
                            <label for="phone">Số điện thoại:</label>
                            <input type="text" class="form-control" id="phone" required>
                        </div>
                        <div class="mb-3">
                            <label for="discount">Giảm giá:</label>
                            <input type="text" class="form-control" id="discount" required>
                        </div>
                        <div class="mb-3">
                            <label for="total">Tổng tiền:</label>
                            <input type="number" class="form-control" id="total" required>
                        </div>
                        <div class="mb-3">
                            <label for="paymentMethod">Phương thức thanh toán:</label>
                            <select class="form-control" id="paymentMethod" name="paymentMethod" required>
                                <option value="cod">Thanh toán khi nhận hàng (COD)</option>
                                <option value="bank">Chuyển khoản ngân hàng</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="endAddress">Địa chỉ:</label>
                            <input type="text" class="form-control" id="endAddress" required>
                        </div>
                        <div class="mb-3">
                            <label for="status">Trạng thái:</label>
                            <select class="form-control" id="status">
                                <option value="Đang xử lý">Đang xử lý</option>
                                <option value="Hoàn thành">Hoàn thành</option>
                                <option value="Đã hủy">Đã hủy</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="dayBought">Ngày tạo:</label>
                            <input type="date" class="form-control" id="dayBought" required>
                        </div>
                        <button type="button" class="btn btn-primary" onclick="saveBill()">Lưu hóa đơn</button>
                        <button type="button" class="btn btn-secondary" onclick="hideBillForm()">Hủy</button>
                    </form>
                </div>
            </div>
            <div id="productManager" class="tab-content d-none">
                <h3>Quản lý sản phẩm</h3>
                <!-- Nút mở form -->
                <button class="btn btn-success mb-3" onclick="showProductForm()">Thêm sản phẩm</button>

                <!-- Bảng sản phẩm -->
                <table class="table mt-2">
                    <thead>
                        <tr>
                            @* <th>ID</th> *@
                            <th>Tên sản phẩm</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="productTableBody">
                        <tr><td colspan="5" class="text-center">Chưa có dữ liệu</td></tr>
                    </tbody>
                </table>

                <!-- Form thêm/sửa sản phẩm (Ẩn mặc định) -->
                <div id="productFormContainer" class="d-none">
                    <h4 id="formTitle">Thêm sản phẩm</h4>
                    <form id="productForm">
                        <input type="hidden" id="productId">
                        <div class="mb-3">
                            <label for="productName">Tên sản phẩm:</label>
                            <input type="text" class="form-control" id="productName" required>
                        </div>
                        <div class="mb-3">
                            <label for="productPrice">Giá:</label>
                            <input type="number" class="form-control" id="productPrice" required>
                        </div>
                        <div class="mb-3">
                            <label for="productAmount">Số lượng:</label>
                            <input type="number" class="form-control" id="productAmount" required>
                        </div>
                        <button type="button" class="btn btn-primary" onclick="saveProduct()">Lưu sản phẩm</button>
                        <button type="button" class="btn btn-secondary" onclick="hideProductForm()">Hủy</button>
                    </form>
                </div>
            </div>
            <!-- Toast thông báo -->
            <div id="toastContainer" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
            </div>

            <div id="userManager" class="tab-content d-none">
                <h3>Quản lý tài khoản</h3>
                <!-- Nút mở form -->
                <button class="btn btn-success mb-3" onclick="showUserForm()">Thêm tài khoản</button>

                <!-- Bảng tài khoản -->
                <table class="table mt-2">
                    <thead>
                        <tr>
                            @* <th>ID</th> *@
                            <th>Tên</th>
                            <th>Số điện thoại</th>
                            <th>Email</th>
                            <th>Địa chỉ</th>
                            <th>Giới tính</th>
                            <th>Ngày sinh</th>
                            <th>Chức vụ</th>
                            <th>Tên tài khoản</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="userTableBody">
                        <tr><td colspan="10" class="text-center">Chưa có dữ liệu</td></tr>
                    </tbody>
                </table>

                <!-- Form thêm/sửa tài khoản (Ẩn mặc định) -->
                <div id="userFormContainer" class="d-none">
                    <h4 id="formTitle">Thêm tài khoản</h4>
                    <form id="userForm">
                        <input type="hidden" id="userId">
                        <div class="mb-3">
                            <label for="name">Tên:</label>
                            <input type="text" class="form-control" id="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="phone">Số điện thoại:</label>
                            <input type="text" class="form-control" id="phone" required>
                        </div>
                        <div class="mb-3">
                            <label for="email">Email:</label>
                            <input type="text" class="form-control" id="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="address">Địa chỉ:</label>
                            <input type="text" class="form-control" id="address" required>
                        </div>
                        <div class="mb-3">
                            <label for="gender">Giới tính:</label>
                            <select class="form-control" id="gender" required>
                                <option value="Nam">Nam</option>
                                <option value="Nữ">Nữ</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="birthday">Ngày sinh:</label>
                            <input type="date" class="form-control" id="birthday" required>
                        </div>
                        <div class="mb-3">
                            <label for="role">Chức vụ:</label>
                            <select class="form-control" id="role" required>
                                <option value="User">User</option>
                                <option value="Admin">Admin</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="userName">Tài khoản:</label>
                            <input type="text" class="form-control" id="userName" required>
                        </div>
                        <div class="mb-3">
                            <label for="password">Mật khẩu:</label>
                            <input type="password" class="form-control" id="password">
                        </div>
                        <button type="button" class="btn btn-primary" onclick="saveUser()">Lưu</button>
                        <button type="button" class="btn btn-secondary" onclick="hideUserForm()">Hủy</button>
                    </form>
                </div>
            </div>

            <div id="toastContainer" class="position-fixed top-0 end-0 p-3" style="z-index: 1050;">
            </div>

            <div id="changePassword" class="tab-content d-none">
                <h2>Đổi mật khẩu</h2>
                <form id="passwordForm" method="post" asp-controller="Admin" asp-action="ChangePassword">
                    <input type="hidden" name="userId" id="userId">
                    <div class="mb-3">
                        <label>Mật khẩu hiện tại:</label>
                        <input type="password" class="form-control" name="oldPassword">
                    </div>
                    <div class="mb-3">
                        <label>Mật khẩu mới:</label>
                        <input type="password" class="form-control" name="newPassword">
                    </div>
                    <div class="mb-3">
                        <label>Nhập lại mật khẩu mới:</label>
                        <input type="password" class="form-control" name="rePassword">
                    </div>
                    <button type="submit" class="btn btn-primary">Đổi mật khẩu</button>
                </form>
            </div>

            <div id="feedbackManager" class="tab-content d-none">
                <h2>Quản lý góp ý</h2>
                <div class="table-responsive">
                    <table class="table table-striped" id="feedbackTable">
                        <thead>
                            <tr>
                                <th>Tên</th>
                                <th>Email</th>
                                <th>Số điện thoại</th>
                                <th>Địa chỉ</th>
                                <th>Nội dung góp ý</th>
                                <th>Ngày gửi</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody id="feedbackTableBody">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        loadBills();
    });
    function showTab(tabId) {
        document.querySelectorAll('.tab-content').forEach(tab => {
            tab.classList.add('d-none');
        });
        document.getElementById(tabId).classList.remove('d-none');

        if (tabId === "billManager") {
            loadBills();
        }
        if (tabId === "userManager") {
            loadUsers();
        }
        if (tabId === "productManager") {
            loadProducts();
        }
    }

    function loadProducts() {
        fetch('/Admin/Admin/GetProducts')
            .then(response => response.json())
            .then(data => {
                let tableBody = document.getElementById("productTableBody");
                tableBody.innerHTML = "";

                if (data.length === 0) {
                    tableBody.innerHTML = "<tr><td colspan='5' class='text-center'>Không có sản phẩm nào</td></tr>";
                    return;
                }

                data.forEach(product => {
                    let row = `
                        <tr>
                            
                            <td>${product.itemName}</td>
                            <td>${product.itemPrice.toLocaleString()} VND</td>
                            <td>${product.itemAmount}</td>
                            <td>
                                <button class="btn btn-warning btn-sm"
                                    onclick="editProduct('${product.itemId}', '${product.itemName}', ${product.itemPrice}, ${product.itemAmount})">
                                    Sửa
                                </button>
                            </td>
                        </tr>`;
                    tableBody.innerHTML += row;
                });
            })
            .catch(error => console.error("Lỗi khi tải sản phẩm:", error));
    }

    function loadUsers() {
        fetch('/Admin/Admin/GetUsers')
            .then(response => response.json())
            .then(data => {
                let tableBody = document.getElementById("userTableBody");
                tableBody.innerHTML = "";

                if (data.length === 0) {
                    tableBody.innerHTML = "<tr><td colspan='10' class='text-center'>Không có người dùng nào</td></tr>";
                    return;
                }

                data.forEach(user => {
                    let row = `
                            <tr>
                                
                                <td>${user.name}</td>
                                <td>${user.phone}</td>
                                <td>${user.email}</td>
                                <td>${user.address}</td>
                                <td>${user.gender}</td>
                                <td>${user.birthday}</td>
                                <td>${user.role}</td>
                                <td>${user.userName}</td>
                                <td>
                                        <button class="btn btn-warning btn-sm"
        onclick="editUser('${user.userId}', '${user.name}', '${user.phone}', '${user.email}', '${user.address}', '${user.gender}', '${user.birthday}', '${user.role}', '${user.userName}')">
        Sửa
    </button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteUser(${user.userId})">Xóa</button>
                                </td>
                            </tr>`;
                    tableBody.innerHTML += row;
                });
            })
            .catch(error => console.error("Lỗi khi tải người dùng:", error));
    }

    function showUserForm(isEdit = false) {
        document.getElementById("userFormContainer").classList.remove("d-none");
        document.getElementById("formTitle").innerText = isEdit ? "Chỉnh sửa tài khoản" : "Thêm tài khoản";

        if (!isEdit) {
            document.getElementById("userForm").reset();
            document.getElementById("userId").value = "";
        }
    }

    function showProductForm(isEdit = false) {
        document.getElementById("productFormContainer").classList.remove("d-none");
        document.getElementById("formTitle").innerText = isEdit ? "Chỉnh sửa sản phẩm" : "Thêm sản phẩm";

        if (!isEdit) {
            document.getElementById("productForm").reset();
            document.getElementById("productId").value = "";
        }
    }

    function hideUserForm() {
        document.getElementById("userFormContainer").classList.add("d-none");
    }

    function editUser(id, name, phone, email, address, gender, birthday, role, userName) {
        document.getElementById("userId").value = id;
        document.getElementById("name").value = name;
        document.getElementById("phone").value = phone;
        document.getElementById("email").value = email;
        document.getElementById("address").value = address;
        document.getElementById("gender").value = gender;
        document.getElementById("birthday").value = birthday;
        document.getElementById("role").value = role;
        document.getElementById("userName").value = userName;
        showUserForm(true);
    }


    function saveUser() {
        let id = document.getElementById("userId").value.trim();
        let name = document.getElementById("name").value.trim();
        let phone = document.getElementById("phone").value.trim();
        let email = document.getElementById("email").value.trim();
        let address = document.getElementById("address").value.trim();
        let gender = document.getElementById("gender").value;
        let birthday = document.getElementById("birthday").value;
        let role = document.getElementById("role").value;
        let userName = document.getElementById("userName").value.trim();
        let password = document.getElementById("password").value.trim();

        // Kiểm tra dữ liệu hợp lệ
        if (!name || !phone || !email || !userName) {
            showToast("Vui lòng nhập đầy đủ thông tin!", "danger");
            return;
        }

        let userData = {
            userId: id ? id : null,
            userName: userName,
            name:name,
            phone: phone,
            email: email,
            address: address,
            gender: gender,
            birthday: birthday,
            role: role,
            password: password
        };

        let apiUrl = id ? "/Admin/Admin/UpdateUser" : "/Admin/Admin/AddUser";
        let method = id ? "PUT" : "POST";

        fetch(apiUrl, {
            method: method,
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(userData)
        })
            .then(response => response.json())
            .then(result => {
                showToast(result.message, "success");
                hideUserForm();
                loadUsers();
            })
            .catch(error => showToast("Lỗi khi lưu tài khoản!", "danger"));
    }


    function hideUserForm() {
        document.getElementById("userFormContainer").classList.add("d-none");
        }

    function deleteUser(id) {
        if (confirm("Bạn có chắc muốn xóa tài khoản này?")) {
            fetch(`/Admin/Admin/DeleteUser/${id}`, { method: "DELETE" })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Xóa thành công!");
                        loadUsers();
                    } else {
                        alert("Lỗi khi xóa tài khoản!");
                    }
                })
                .catch(error => console.error("Lỗi khi xóa tài khoản:", error));
        }
    }

    function hideProductForm() {
        document.getElementById("productFormContainer").classList.add("d-none");
    }

    function editProduct(id, name, price, amount) {
        document.getElementById("productId").value = id;
        document.getElementById("productName").value = name;
        document.getElementById("productPrice").value = price;
        document.getElementById("productAmount").value = amount;
        showProductForm(true);
    }

    function showToast(message, type = "success") {
        let toastContainer = document.getElementById("toastContainer");
        let toastId = "toast" + Date.now();

        let toastHtml = `
            <div id="${toastId}" class="toast align-items-center text-white bg-${type} border-0 show" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="d-flex">
                    <div class="toast-body">
                        ${message}
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
            </div>
        `;

        toastContainer.innerHTML += toastHtml;

        setTimeout(() => {
            document.getElementById(toastId)?.remove();
        }, 3000);
    }

    function saveProduct() {
        let id = document.getElementById("productId").value.trim();
        let name = document.getElementById("productName").value;
        let price = document.getElementById("productPrice").value;
        let amount = document.getElementById("productAmount").value;

        if (!name || price <= 0 || amount < 0) {
            showToast("Vui lòng nhập thông tin hợp lệ!", "danger");
            return;
        }

        let productData = {
            itemId: id ? id : null,
            itemName: name,
            itemPrice: parseFloat(price),
            itemAmount: parseInt(amount)
        };

        let apiUrl = id ? "/Admin/Admin/UpdateProduct" : "/Admin/Admin/AddProduct";
        let method = id ? "PUT" : "POST";

        fetch(apiUrl, {
            method: method,
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(productData)
        })
            .then(response => response.json())
            .then(result => {
                showToast(result.message, "success");
                hideProductForm();
                loadProducts();
            })
            .catch(error => showToast("Lỗi khi lưu sản phẩm!", "danger"));
    }

    function loadUserData() {
        const userData = localStorage.getItem("user");
        if (userData) {
            const user = JSON.parse(userData);
            document.getElementById("userId").value = user.userId || "";
            document.getElementById("name").value = user.name || "";
            document.getElementById("userName").value = user.userName || "";
            document.getElementById("email").value = user.email || "";
            document.getElementById("phone").value = user.phone || "";
            document.getElementById("address").value = user.address || "";
            document.getElementById("gender").value = user.gender || "Nam";

            if (user.birthday) {
                let dateParts = user.birthday.split("/");
                if (dateParts.length === 3) {
                    let formattedDate = `${dateParts[2]}-${dateParts[0].padStart(2, '0')}-${dateParts[1].padStart(2, '0')}`;
                    document.getElementById("birthday").value = formattedDate;
                }
            }
        }
    }
</script>

<script>
    function loadBills() {
        fetch('/Admin/Admin/GetBills')
            .then(response => response.json())
            .then(data => {
                let tableBody = document.getElementById("billTableBody");
                tableBody.innerHTML = "";

                if (data.length === 0) {
                    tableBody.innerHTML = "<tr><td colspan='11' class='text-center'>Không có hóa đơn nào</td></tr>";
                    return;
                }

                data.forEach(bill => {
                    let row = `
            <tr>
                
                <td>${bill.fullName}</td>
                <td>${bill.phone}</td>
                <td>${bill.discount}</td>
                <td>${bill.total.toLocaleString()} VND</td>
                <td>${bill.paymentMethod}</td>
                <td>${bill.endAddress}</td>
                <td>${bill.status}</td>
                <td>${bill.dayBought}</td>
                <td>
                    <button class="btn btn-warning btn-sm" onclick='editBill(${JSON.stringify(bill)})'>Sửa</button>
                </td>
            </tr>`;
                    tableBody.innerHTML += row;
                });

            })
            .catch(error => console.error("Lỗi khi tải hóa đơn:", error));
    }

    function showBillForm(isEdit = false) {
        document.getElementById("billFormContainer").classList.remove("d-none");
        document.getElementById("billFormTitle").innerText = isEdit ? "Chỉnh sửa hóa đơn" : "Thêm hóa đơn";

        if (!isEdit) {
            document.getElementById("billForm").reset();
            document.getElementById("billId").value = "";
        }
    }

    function hideBillForm() {
        document.getElementById("billFormContainer").classList.add("d-none");
    }

    function editBill(bill) {
        document.getElementById("billId").value = bill.billId || "";
        document.getElementById("userId").value = bill.userId || "";
        document.getElementById("fullName").value = bill.fullName || "";
        document.getElementById("phone").value = bill.phone || "";
        document.getElementById("discount").value = bill.discount !== undefined ? bill.discount : 0;
        document.getElementById("total").value = bill.total !== undefined ? bill.total : 0;
        document.getElementById("paymentMethod").value = bill.paymentMethod || "";
        document.getElementById("endAddress").value = bill.endAddress || "";
        document.getElementById("status").value = bill.status || "";
        document.getElementById("dayBought").value = bill.dayBought || "";

        showBillForm(true);
    }

    function saveBill() {
        let billData = {
            billId: document.getElementById("billId").value.trim(),
            userId: document.getElementById("userId").value,
            fullName: document.getElementById("fullName").value,
            phone: document.getElementById("phone").value,
            discount: parseFloat(document.getElementById("discount").value),
            total: parseFloat(document.getElementById("total").value),
            paymentMethod: document.getElementById("paymentMethod").value,
            endAddress: document.getElementById("endAddress").value,
            status: document.getElementById("status").value,
            dayBought: document.getElementById("dayBought").value
        };

        fetch("/Admin/Admin/UpdateBill", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(billData)
        })
            .then(response => response.json())
            .then(result => console.log("Kết quả:", result))
            .catch(error => console.error("Lỗi khi gửi request:", error));
    }

    function exportExcel() {
        fetch("/Admin/Admin/ExportBills") // Đổi URL theo backend
            .then(response => response.blob()) // Chuyển response thành file blob
            .then(blob => {
                let link = document.createElement("a");
                link.href = window.URL.createObjectURL(blob);
                link.download = "Bills.xlsx"; // Đặt tên file tải về
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            })
            .catch(error => console.error("Lỗi khi tải file Excel:", error));
    }
</script>

<script>
    function showTab(tabId) {
        document.querySelectorAll('.tab-content').forEach(tab => {
            tab.classList.add('d-none');
        });
        document.getElementById(tabId).classList.remove('d-none');

        if (tabId === "billManager") {
            loadBills();
        }
        if (tabId === "userManager") {
            loadUsers();
        }
        if (tabId === "productManager") {
            loadProducts();
        }
        if (tabId === "feedbackManager") {
            loadFeedbacks();
        }
    }
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Highlight active menu item
        const menuItems = document.querySelectorAll('.list-group-item');
        menuItems.forEach(item => {
            item.addEventListener('click', function() {
                menuItems.forEach(i => i.classList.remove('active'));
                this.classList.add('active');
            });
        });

        // Initialize first tab
        showTab('billManager');
    });

    function showTab(tabId) {
        // Hide all tabs
        document.querySelectorAll('.tab-content').forEach(tab => {
            tab.classList.remove('show');
            setTimeout(() => {
                tab.classList.add('d-none');
            }, 300);
        });

        // Show selected tab
        setTimeout(() => {
            const selectedTab = document.getElementById(tabId);
            selectedTab.classList.remove('d-none');
            // Trigger reflow
            selectedTab.offsetHeight;
            selectedTab.classList.add('show');
        }, 300);

        // Load data based on tab
        if (tabId === "billManager") {
            loadBills();
        } else if (tabId === "userManager") {
            loadUsers();
        } else if (tabId === "productManager") {
            loadProducts();
        } else if (tabId === "feedbackManager") {
            loadFeedbacks();
        }
    }
</script>

<style>
    .nav-link {
        color: #333;
        transition: all 0.3s ease;
    }

    .nav-link:hover {
        color: #0d6efd;
        background-color: #f8f9fa;
        transform: translateX(5px);
    }

    .list-group-item {
        border-left: 3px solid transparent;
        transition: all 0.3s ease;
    }

    .list-group-item:hover {
        border-left-color: #0d6efd;
    }

    .list-group-item.active {
        border-left-color: #0d6efd;
        background-color: #f8f9fa;
    }

    .card {
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15)!important;
    }

    .table {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 0 10px rgba(0,0,0,.05);
    }

    .table thead th {
        background-color: #f8f9fa;
        border-bottom: 2px solid #dee2e6;
        color: #495057;
    }

    .btn {
        border-radius: 5px;
        padding: 0.375rem 1rem;
        transition: all 0.3s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 5px rgba(0,0,0,.2);
    }

    .toast {
        border-radius: 8px;
        box-shadow: 0 .5rem 1rem rgba(0,0,0,.15);
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13,110,253,.25);
    }

    .tab-content {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.3s ease;
    }

    .tab-content.show {
        opacity: 1;
        transform: translateY(0);
    }
</style>

<script>
    function loadFeedbacks() {
        fetch('/Admin/Admin/GetFeedbacks')
            .then(response => response.json())
            .then(data => {
                const tbody = document.getElementById('feedbackTableBody');
                tbody.innerHTML = '';
                
                data.forEach(feedback => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${feedback.name}</td>
                        <td>${feedback.email || 'Không có'}</td>
                        <td>${feedback.phone}</td>
                        <td>${feedback.address || 'Không có'}</td>
                        <td>${feedback.note || 'Không có'}</td>
                        <td>${feedback.daySend}</td>
                        <td>
                            <button class="btn btn-danger btn-sm" onclick="deleteFeedback('${feedback.userId}')">
                                <i class="fas fa-trash"></i> Xóa
                            </button>
                        </td>
                    `;
                    tbody.appendChild(row);
                });
            })
            .catch(error => {
                console.error('Error loading feedbacks:', error);
                showToast('Lỗi khi tải danh sách góp ý', 'error');
            });
    }

    function deleteFeedback(userId) {
        if (confirm('Bạn có chắc chắn muốn xóa góp ý này không?')) {
            fetch('/Admin/Admin/DeleteFeedback', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `userId=${userId}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast(data.message, 'success');
                    setTimeout(() => {
                        loadFeedbacks(); // Load lại sau 500ms để đảm bảo toast message hiển thị xong
                    }, 500);
                } else {
                    showToast(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error deleting feedback:', error);
                showToast('Lỗi khi xóa góp ý', 'error');
            });
        }
    }
</script>
