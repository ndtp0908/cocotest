@{
    ViewData["Title"] = "Giỏ hàng";
}
<div class="container mt-1">
    <h2 class="text-center text-uppercase" style="font-size: 38px; color: #8B0000; font-weight: bold;">Giỏ hàng</h2>

    <div id="error-message" class="alert alert-danger d-none mt-3"></div>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success mt-3 text-center" role="alert">
            @TempData["SuccessMessage"]
            <a href="/Home/Index" class="btn btn-outline-primary btn-sm ms-2">Về trang chủ</a>
        </div>
    }

    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card p-4 shadow-lg rounded">
                <h4 class="mb-4">Thông tin giao hàng</h4>
                <form method="post" action="/Shopping/Shopping" id="checkout-form">
                    <div class="mb-3">
                        <label for="fullName" class="form-label">Họ và Tên</label>
                        <input type="text" class="form-control" id="fullName" name="fullName" required>
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label">Số điện thoại</label>
                        <input type="text" class="form-control" id="phone" name="phone" required>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="form-label">Địa chỉ giao hàng</label>
                        <input type="text" class="form-control" id="address" name="address" required>
                    </div>
                    <div class="mb-3">
                        <label for="voucher" class="form-label">Mã giảm giá</label>
                        <input type="text" class="form-control" id="voucher">
                    </div>
                    <div class="mb-3">
                        <label for="paymentMethod" class="form-label">Phương thức thanh toán</label>
                        <select class="form-control" id="paymentMethod" name="paymentMethod" required>
                            <option value="cod">Thanh toán khi nhận hàng (COD)</option>
                            <option value="bank">Chuyển khoản ngân hàng</option>
                        </select>
                    </div>
                    <div class="text-center" id="qr-container" style="display: none;">
                        <h5 class="mt-3">Mã QR thanh toán</h5>
                        <img id="qr-code" src="../image/qr.jpg" alt="QR Code" class="rounded shadow-lg" style="max-width: 200px; margin: auto;">
                    </div>
                    <button type="submit" class="btn btn-primary w-100 mt-3 fw-bold">Xác nhận thanh toán</button>
                </form>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card p-4 shadow-lg rounded">
                <h4 class="mb-4">Đơn hàng của bạn</h4>
                <ul class="list-group" id="cart-items"></ul>
                <div class="list-group-item d-flex justify-content-between bg-light fw-bold mt-3 p-3 rounded">
                    <span>Tổng tiền</span>
                    <span id="total-price" class="text-danger">0 đ</span>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        let cart = JSON.parse(localStorage.getItem("tempShopping")) || {};
        let cartList = document.getElementById("cart-items");
        let totalPrice = 0;

        // Lấy thông tin người dùng nếu đã lưu
        let user = JSON.parse(localStorage.getItem("user"));
        if (user) {
            document.getElementById("fullName").value = user.name || "";
            document.getElementById("phone").value = user.phone || "";
            document.getElementById("address").value = user.address || "";
        }

        // Cập nhật giao diện giỏ hàng
        function updateCartUI() {
            cartList.innerHTML = "";
            totalPrice = 0;

            for (let key in cart) {
                let item = cart[key];
                let itemTotal = item.itemPrice * item.itemAmount;
                totalPrice += itemTotal;

                let listItem = document.createElement("li");
                listItem.className = "list-group-item";
                listItem.innerHTML = `
                    <div>
                        <strong>${item.itemName}</strong>
                            <div class="d-flex align-items-center">
                            <button class="btn btn-secondary btn-sm me-2 change-amount" data-id="${key}" data-change="-1">-</button>
                            <span id="amount-${key}" class="me-2">${item.itemAmount}</span>
                            <button class="btn btn-secondary btn-sm me-2 change-amount" data-id="${key}" data-change="1">+</button>
                                <div class="ms-auto">
                                <span id="price-${key}">${itemTotal.toLocaleString()} đ</span>
                                <button class="btn btn-danger btn-sm ms-2 remove-item" data-id="${key}">X</button>
                            </div>
                        </div>
                    </div>                  
                `;

                cartList.appendChild(listItem);
            }

            document.getElementById("total-price").innerText = totalPrice.toLocaleString() + " đ";
            localStorage.setItem("tempShopping", JSON.stringify(cart));
        }

        updateCartUI();

        // Sự kiện tăng/giảm số lượng sản phẩm
        document.addEventListener("click", function (event) {
            if (event.target.classList.contains("change-amount")) {
                let itemId = event.target.getAttribute("data-id");
                let change = parseInt(event.target.getAttribute("data-change"));

                if (cart[itemId]) {
                    cart[itemId].itemAmount += change;
                    if (cart[itemId].itemAmount < 1) cart[itemId].itemAmount = 1;
                    updateCartUI();
                }
            }

            if (event.target.classList.contains("remove-item")) {
                let itemId = event.target.getAttribute("data-id");
                delete cart[itemId];
                updateCartUI();
            }
        });

        // Xử lý thanh toán
        document.getElementById("checkout-form").addEventListener("submit", function (event) {
            event.preventDefault();

            let cartItems = Object.keys(cart).map(key => ({
                itemId: cart[key].itemId,
                itemAmount: cart[key].itemAmount,
                itemPrice: cart[key].itemPrice
            }));

            let totalAmount = cartItems.reduce((acc, item) => acc + (item.itemAmount * item.itemPrice), 0);

            let orderData = {
                userId: user ? user.userId : null,
                fullName: document.getElementById("fullName").value,
                phone: document.getElementById("phone").value,
                address: document.getElementById("address").value,
                paymentMethod: document.getElementById("paymentMethod").value,
                discount: 0,
                total: totalAmount,
                cart: cartItems
            };

            fetch("/Shopping/Shopping", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(orderData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        localStorage.removeItem("tempShopping");
                        window.location.href = "/Shopping/Success";
                    } else {
                        document.getElementById("error-message").textContent = data.message;
                        document.getElementById("error-message").classList.remove("d-none");
                    }
                })
                .catch(() => {
                    document.getElementById("error-message").textContent = "Lỗi khi gửi yêu cầu.";
                    document.getElementById("error-message").classList.remove("d-none");
                });
        });

        // Hiển thị QR code khi chọn thanh toán qua ngân hàng
        document.getElementById("paymentMethod").addEventListener("change", function () {
            document.getElementById("qr-container").style.display = this.value === "bank" ? "block" : "none";
        });
    });

</script>
